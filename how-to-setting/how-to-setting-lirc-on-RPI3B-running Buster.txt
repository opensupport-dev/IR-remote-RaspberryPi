
Step 1: Assemble Hardware
1) Attach the left leg to BCM pin 18 on the RPi (yellow wire)
2) Attach the center leg to ground (black wire)
3) Attach the right leg to 3.3v (red wire)

Step 2: Install Lirc
<Old method>
$ sudo apt-get update
$ sudo apt-get install lirc
$ sudo mv /etc/lirc/lirc_options.conf.dist /etc/lirc/lirc_options.conf
$ sudo apt-get install lirc

<New method in Buster>
	Step - 1: Install a patch to use irrecord with kernel 4.19.X and gpio-ir
sudo su -c "grep '^deb ' /etc/apt/sources.list | sed 's/^deb/deb-src/g' > /etc/apt/sources.list.d/deb-src.list"
sudo apt update
sudo apt install devscripts

	Step - 2: If you have already installed lirc with apt, please uninstall it as follows
sudo apt remove lirc liblirc0 liblirc-client0

	Step - 3: Installing with a patch for gpio-ir in Raspbian Buster
sudo apt install dh-exec doxygen expect libasound2-dev libftdi1-dev libsystemd-dev libudev-dev libusb-1.0-0-dev libusb-dev man2html-base portaudio19-dev socat xsltproc python3-yaml dh-python libx11-dev python3-dev python3-setuptools
mkdir build
cd build
apt source lirc
wget https://raw.githubusercontent.com/neuralassembly/raspi/master/lirc-gpio-ir-0.10.patch
patch -p0 -i lirc-gpio-ir-0.10.patch
cd lirc-0.10.1
debuild -uc -us -b
cd ..
sudo apt install ./liblirc0_0.10.1-5.2_armhf.deb ./liblircclient0_0.10.1-5.2_armhf.deb ./lirc_0.10.1-5.2_armhf.deb

The final install command will fail. Then please configure the files shown below first, 
i.e., /boot/config.txt and /etc/lirc/lirc_options.conf. 
After that, please try the final install command again. Then the install will success.

You should not remove three deb files because the installed lirc would be downgraded 
when you execute "sudo apt dist-upgrade". In such a case, please install the three deb files again.


Step 3: Edit Config.txt
Edit /boot/config.txt by adding one line in the lirc-rpi module section as follows. 
This example assumes the RPi is 'listening' on BCM Pin 17 for the IR receiver but any RPi IO pin can be used. 
I have not tried it yet but if you want to send commands from the RPi then add and uncomment the 4th line shown below 
to send IR commands on BCM pin 18

# Uncomment this to enable the lirc-rpi module
#dtoverlay=lirc-rpi
dtoverlay=gpio-ir,gpio_pin=17
#dtoverlay=gpio-ir-tx, gpio_pin=18

Step 4: Perform copy to remove .dist suffix from lirc_options.conf.dist and lircd.conf.dist
sudo cp /etc/lirc/lirc_options.conf.dist /etc/lirc/lirc_options.conf
sudo cp /etc/lirc/lircd.conf.dist /etc/lirc/lircd.conf


If you do not use devinput, please execute the following command. 
sudo mv /etc/lirc/lircd.conf.d/devinput.lircd.conf /etc/lirc/lircd.conf.d/devinput.lircd.conf.dist


After that, if you are using Raspbian Buster, please execute the final install command again here. Then the install will success.
Step 5: Reinstall
sudo apt install -y --allow-downgrades ./liblirc0_0.10.1-5.2_armhf.deb ./liblircclient0_0.10.1-5.2_armhf.deb ./lirc_0.10.1-5.2_armhf.deb


Step 6: Edit Lirc_options.conf
Edit /etc/lirc/lirc_options.conf 
driver = default
device = /dev/lirc1


Step 7: Reinstall:
sudo apt install -y --allow-downgrades ./liblirc0_0.10.1-5.2_armhf.deb ./liblircclient0_0.10.1-5.2_armhf.deb ./lirc_0.10.1-5.2_armhf.deb


Step 8: Check status and reboot
$ sudo systemctl stop lircd.service
$ sudo systemctl start lircd.service
$ sudo systemctl status lircd.service

Reboot:
$ sudo reboot


Step 9: Test Remote
This step assumes you have have a IR receiver hooked up to your RPi on the pin specified in config.txt. 

1) stop LIRCD service and test remote using mode2 command
$ sudo systemctl stop lircd.service
$ sudo mode2 -d /dev/lirc0

3) Point the remote at the receiver and press some buttons. You should see something LIKE this:

:
:
space
pulse
:

4) Press Ctrl-C to exit


//////////////////////////////////////////////////////////////

ÄÚµå: https://www.lirc.org/api-docs/html/group__receiving.html

//////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////

In case of IR Receiver & Tranceiver

//////////////////////////////////////////////////////////////
>>>> In case, IR Reciver

mode2 >>>
    Stop LIRC systemd service:
sudo systemctl stop lircd

    Start outputting raw data from the IR receiver
mode2 -d /dev/lirc1
    Point a remote control at the IR receiver on ANAVI Infrared pHAT and press its buttons. If the IR receiver is configured successfully you will see similar output:

space 3662230
pulse 2428
space 594
pulse 1201
space 596
pulse 1230
space 595
pulse 1209
space 590
pulse 1204


irrecord >>>
sudo systemctl stop lircd

List all available names for buttons supported by LIRC:
irrecord --list-namespace


Type in the following command to create new LIRC control configuration file and follow the on screen instructions to scan a remote control:
irrecord -d /dev/lirc1 ~/lircd.conf


Backup the original LIRC configuration file:
sudo mv /etc/lirc/lircd.conf /etc/lirc/lircd-backup.conf


Load the new configuration file, for example:
sudo mv freenanum.lircd.conf /etc/lirc/lircd.conf

/////////////////////////////////////////////////////////
>>>> In case, IR Tranceiver

Switch LIRC configurations to the device for transmitting. Edit again /etc/lirc/lirc_options.conf and make sure that driver and device are set as:

driver          = default
device          = /dev/lirc0

Launch LIRC systemd service again:
sudo systemctl start lircd

List all saved keys, for example:
NOTE: Please adapt the command below depending on your name of remote!

irsend LIST freenanum ""

Test the configuration file by sending recorded IR command, 
for example POWER (please note the exact command may vary 
for different LIRC configuration files, IR devices and IR remote controls):



NOTE: Please adapt the command below depending on your name of remote!
irsend SEND_ONCE freenanum KEY_POWER


NOTE: Please keep in mind that in rare cases some devices might require codes 
to be sent in short bursts, for example:
irsend send_once freenanum KEY_POWER KEY_POWER KEY_POWER

///////////////////////////////////////////////////////

Test with IR remote controller.

/////////////////////////////////////////////

$ sudo systemctl start lircd.service
$ irw 

/////////////////////////////////////////////

<Disable Additional Features>
If you do not want to receive keystrokes when you press a button on the remote, disable this feature:
sudo systemctl disable lircd-uinput.service 

